// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battle.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Battle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
class RspFreeHeroDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RspFreeHero>
     _instance;
} _RspFreeHero_default_instance_;
class SelectHeroReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectHeroReq>
     _instance;
} _SelectHeroReq_default_instance_;
class SelectHeroRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectHeroRsp>
     _instance;
} _SelectHeroRsp_default_instance_;
class SceneObjectDisappearDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneObjectDisappear>
     _instance;
} _SceneObjectDisappear_default_instance_;
class SceneObjectStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneObjectState>
     _instance;
} _SceneObjectState_default_instance_;
class MoveObjectStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MoveObjectState>
     _instance;
} _MoveObjectState_default_instance_;
class MoveObjectMutableStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MoveObjectMutableState>
     _instance;
} _MoveObjectMutableState_default_instance_;
class MoveToPosDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MoveToPos>
     _instance;
} _MoveToPos_default_instance_;
class BattleOperationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BattleOperation>
     _instance;
} _BattleOperation_default_instance_;
class ViewGridDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ViewGrid>
     _instance;
} _ViewGrid_default_instance_;
class ViewSnapshotDiffDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ViewSnapshotDiff>
     _instance;
} _ViewSnapshotDiff_default_instance_;
class ViewSnapshotDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ViewSnapshot>
     _instance;
} _ViewSnapshot_default_instance_;
class ViewAllGridsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ViewAllGrids>
     _instance;
} _ViewAllGrids_default_instance_;
class SceneUnitStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneUnitState>
     _instance;
} _SceneUnitState_default_instance_;
class SceneUnitTransformDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneUnitTransform>
     _instance;
} _SceneUnitTransform_default_instance_;
class SceneUnitMoveDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneUnitMove>
     _instance;
} _SceneUnitMove_default_instance_;

namespace protobuf_Battle_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspFreeHero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspFreeHero, red_hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspFreeHero, blue_hero_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectHeroReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectHeroReq, hero_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectHeroRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectHeroRsp, hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectHeroRsp, is_succ_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectDisappear, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectDisappear, objids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectState, objid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectState, obj_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectState, model_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectState, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneObjectState, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectState, obj_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectState, radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectState, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectState, mass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectState, max_speed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectMutableState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectMutableState, objid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectMutableState, move_agent_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectMutableState, volecity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectMutableState, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveObjectMutableState, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveToPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveToPos, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOperation, opera_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOperation, target_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOperation, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOperation, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewGrid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewGrid, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewGrid, grid_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewSnapshotDiff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewSnapshotDiff, more_grids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewSnapshotDiff, miss_grids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewSnapshot, light_grids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAllGrids, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAllGrids, grid_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAllGrids, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAllGrids, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAllGrids, grids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitState, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitState, unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitState, model_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitState, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitState, face_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitState, parent_su_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitTransform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitTransform, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitTransform, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitTransform, face_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitTransform, parent_su_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitMove, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneUnitMove, move_agent_state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RspFreeHero)},
  { 7, -1, sizeof(SelectHeroReq)},
  { 13, -1, sizeof(SelectHeroRsp)},
  { 20, -1, sizeof(SceneObjectDisappear)},
  { 26, -1, sizeof(SceneObjectState)},
  { 36, -1, sizeof(MoveObjectState)},
  { 46, -1, sizeof(MoveObjectMutableState)},
  { 56, -1, sizeof(MoveToPos)},
  { 62, -1, sizeof(BattleOperation)},
  { 71, -1, sizeof(ViewGrid)},
  { 78, -1, sizeof(ViewSnapshotDiff)},
  { 85, -1, sizeof(ViewSnapshot)},
  { 91, -1, sizeof(ViewAllGrids)},
  { 100, -1, sizeof(SceneUnitState)},
  { 111, -1, sizeof(SceneUnitTransform)},
  { 120, -1, sizeof(SceneUnitMove)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RspFreeHero_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectHeroReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectHeroRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneObjectDisappear_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneObjectState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MoveObjectState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MoveObjectMutableState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MoveToPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BattleOperation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ViewGrid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ViewSnapshotDiff_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ViewSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ViewAllGrids_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneUnitState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneUnitTransform_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneUnitMove_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Battle.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_Common_2eproto::InitDefaults();
  ::NetProto::protobuf_BattleEnum_2eproto::InitDefaults();
  _RspFreeHero_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RspFreeHero_default_instance_);_SelectHeroReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectHeroReq_default_instance_);_SelectHeroRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectHeroRsp_default_instance_);_SceneObjectDisappear_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneObjectDisappear_default_instance_);_SceneObjectState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneObjectState_default_instance_);_MoveObjectState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MoveObjectState_default_instance_);_MoveObjectMutableState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MoveObjectMutableState_default_instance_);_MoveToPos_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MoveToPos_default_instance_);_BattleOperation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BattleOperation_default_instance_);_ViewGrid_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ViewGrid_default_instance_);_ViewSnapshotDiff_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ViewSnapshotDiff_default_instance_);_ViewSnapshot_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ViewSnapshot_default_instance_);_ViewAllGrids_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ViewAllGrids_default_instance_);_SceneUnitState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneUnitState_default_instance_);_SceneUnitTransform_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneUnitTransform_default_instance_);_SceneUnitMove_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneUnitMove_default_instance_);_SceneObjectState_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
  _MoveObjectState_default_instance_._instance.get_mutable()->obj_state_ = const_cast< ::NetProto::SceneObjectState*>(
      ::NetProto::SceneObjectState::internal_default_instance());
  _MoveObjectMutableState_default_instance_._instance.get_mutable()->volecity_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
  _MoveObjectMutableState_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
  _MoveToPos_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
  _BattleOperation_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
  _ViewGrid_default_instance_._instance.get_mutable()->center_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
  _SceneUnitState_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
  _SceneUnitTransform_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Battle.proto\022\010NetProto\032\014Common.proto\032\020"
      "BattleEnum.proto\"8\n\013RspFreeHero\022\023\n\013red_h"
      "ero_id\030\001 \001(\004\022\024\n\014blue_hero_id\030\002 \001(\004\" \n\rSe"
      "lectHeroReq\022\017\n\007hero_id\030\001 \001(\004\"1\n\rSelectHe"
      "roRsp\022\017\n\007hero_id\030\001 \001(\004\022\017\n\007is_succ\030\002 \001(\010\""
      "&\n\024SceneObjectDisappear\022\016\n\006objids\030\001 \003(\004\""
      "\221\001\n\020SceneObjectState\022\r\n\005objid\030\001 \001(\004\022(\n\010o"
      "bj_type\030\002 \001(\0162\026.NetProto.ESceneObject\022\020\n"
      "\010model_id\030\003 \001(\005\022 \n\003pos\030\004 \001(\0132\023.NetProto."
      "PBVector3\022\020\n\010rotation\030\005 \001(\002\"\201\001\n\017MoveObje"
      "ctState\022-\n\tobj_state\030\001 \001(\0132\032.NetProto.Sc"
      "eneObjectState\022\016\n\006radius\030\002 \001(\005\022\016\n\006height"
      "\030\003 \001(\005\022\014\n\004mass\030\004 \001(\005\022\021\n\tmax_speed\030\005 \001(\005\""
      "\267\001\n\026MoveObjectMutableState\022\r\n\005objid\030\001 \001("
      "\004\0223\n\020move_agent_state\030\002 \001(\0162\031.NetProto.E"
      "MoveAgentState\022%\n\010volecity\030\003 \001(\0132\023.NetPr"
      "oto.PBVector3\022 \n\003pos\030\004 \001(\0132\023.NetProto.PB"
      "Vector3\022\020\n\010rotation\030\005 \001(\002\"-\n\tMoveToPos\022 "
      "\n\003pos\030\001 \001(\0132\023.NetProto.PBVector2\"~\n\017Batt"
      "leOperation\022)\n\005opera\030\001 \001(\0162\032.NetProto.EB"
      "attleOperation\022\021\n\ttarget_id\030\002 \001(\004\022\013\n\003dir"
      "\030\003 \001(\002\022 \n\003pos\030\004 \001(\0132\023.NetProto.PBVector2"
      "\"B\n\010ViewGrid\022#\n\006center\030\001 \001(\0132\023.NetProto."
      "PBVector2\022\021\n\tgrid_type\030\002 \001(\005\":\n\020ViewSnap"
      "shotDiff\022\022\n\nmore_grids\030\001 \003(\005\022\022\n\nmiss_gri"
      "ds\030\002 \003(\005\"#\n\014ViewSnapshot\022\023\n\013light_grids\030"
      "\001 \003(\005\"^\n\014ViewAllGrids\022\021\n\tgrid_size\030\001 \001(\002"
      "\022\013\n\003row\030\002 \001(\005\022\013\n\003col\030\003 \001(\005\022!\n\005grids\030\004 \003("
      "\0132\022.NetProto.ViewGrid\"\216\001\n\016SceneUnitState"
      "\022\r\n\005su_id\030\001 \001(\004\022\021\n\tunit_type\030\002 \001(\005\022\020\n\010mo"
      "del_id\030\003 \001(\005\022 \n\003pos\030\004 \001(\0132\023.NetProto.PBV"
      "ector3\022\020\n\010face_dir\030\005 \001(\002\022\024\n\014parent_su_id"
      "\030\006 \001(\004\"m\n\022SceneUnitTransform\022\r\n\005su_id\030\001 "
      "\001(\004\022 \n\003pos\030\002 \001(\0132\023.NetProto.PBVector3\022\020\n"
      "\010face_dir\030\003 \001(\002\022\024\n\014parent_su_id\030\004 \001(\004\"S\n"
      "\rSceneUnitMove\022\r\n\005su_id\030\001 \001(\004\0223\n\020move_ag"
      "ent_state\030\002 \001(\0162\031.NetProto.EMoveAgentSta"
      "teB\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1495);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Battle.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_Common_2eproto::AddDescriptors();
  ::NetProto::protobuf_BattleEnum_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Battle_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspFreeHero::kRedHeroIdFieldNumber;
const int RspFreeHero::kBlueHeroIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspFreeHero::RspFreeHero()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.RspFreeHero)
}
RspFreeHero::RspFreeHero(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.RspFreeHero)
}
RspFreeHero::RspFreeHero(const RspFreeHero& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&red_hero_id_, &from.red_hero_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&blue_hero_id_) -
    reinterpret_cast<char*>(&red_hero_id_)) + sizeof(blue_hero_id_));
  // @@protoc_insertion_point(copy_constructor:NetProto.RspFreeHero)
}

void RspFreeHero::SharedCtor() {
  ::memset(&red_hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blue_hero_id_) -
      reinterpret_cast<char*>(&red_hero_id_)) + sizeof(blue_hero_id_));
  _cached_size_ = 0;
}

RspFreeHero::~RspFreeHero() {
  // @@protoc_insertion_point(destructor:NetProto.RspFreeHero)
  SharedDtor();
}

void RspFreeHero::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void RspFreeHero::ArenaDtor(void* object) {
  RspFreeHero* _this = reinterpret_cast< RspFreeHero* >(object);
  (void)_this;
}
void RspFreeHero::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RspFreeHero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RspFreeHero::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspFreeHero& RspFreeHero::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

RspFreeHero* RspFreeHero::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RspFreeHero>(arena);
}

void RspFreeHero::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.RspFreeHero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&red_hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blue_hero_id_) -
      reinterpret_cast<char*>(&red_hero_id_)) + sizeof(blue_hero_id_));
  _internal_metadata_.Clear();
}

bool RspFreeHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.RspFreeHero)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 red_hero_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &red_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 blue_hero_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blue_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.RspFreeHero)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.RspFreeHero)
  return false;
#undef DO_
}

void RspFreeHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.RspFreeHero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 red_hero_id = 1;
  if (this->red_hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->red_hero_id(), output);
  }

  // uint64 blue_hero_id = 2;
  if (this->blue_hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->blue_hero_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.RspFreeHero)
}

::google::protobuf::uint8* RspFreeHero::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.RspFreeHero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 red_hero_id = 1;
  if (this->red_hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->red_hero_id(), target);
  }

  // uint64 blue_hero_id = 2;
  if (this->blue_hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->blue_hero_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.RspFreeHero)
  return target;
}

size_t RspFreeHero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.RspFreeHero)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 red_hero_id = 1;
  if (this->red_hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->red_hero_id());
  }

  // uint64 blue_hero_id = 2;
  if (this->blue_hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->blue_hero_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RspFreeHero::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.RspFreeHero)
  GOOGLE_DCHECK_NE(&from, this);
  const RspFreeHero* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspFreeHero>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.RspFreeHero)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.RspFreeHero)
    MergeFrom(*source);
  }
}

void RspFreeHero::MergeFrom(const RspFreeHero& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.RspFreeHero)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.red_hero_id() != 0) {
    set_red_hero_id(from.red_hero_id());
  }
  if (from.blue_hero_id() != 0) {
    set_blue_hero_id(from.blue_hero_id());
  }
}

void RspFreeHero::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.RspFreeHero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspFreeHero::CopyFrom(const RspFreeHero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.RspFreeHero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspFreeHero::IsInitialized() const {
  return true;
}

void RspFreeHero::Swap(RspFreeHero* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RspFreeHero* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RspFreeHero::UnsafeArenaSwap(RspFreeHero* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RspFreeHero::InternalSwap(RspFreeHero* other) {
  using std::swap;
  swap(red_hero_id_, other->red_hero_id_);
  swap(blue_hero_id_, other->blue_hero_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RspFreeHero::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RspFreeHero

// uint64 red_hero_id = 1;
void RspFreeHero::clear_red_hero_id() {
  red_hero_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RspFreeHero::red_hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RspFreeHero.red_hero_id)
  return red_hero_id_;
}
void RspFreeHero::set_red_hero_id(::google::protobuf::uint64 value) {
  
  red_hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RspFreeHero.red_hero_id)
}

// uint64 blue_hero_id = 2;
void RspFreeHero::clear_blue_hero_id() {
  blue_hero_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RspFreeHero::blue_hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RspFreeHero.blue_hero_id)
  return blue_hero_id_;
}
void RspFreeHero::set_blue_hero_id(::google::protobuf::uint64 value) {
  
  blue_hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RspFreeHero.blue_hero_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectHeroReq::kHeroIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectHeroReq::SelectHeroReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SelectHeroReq)
}
SelectHeroReq::SelectHeroReq(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SelectHeroReq)
}
SelectHeroReq::SelectHeroReq(const SelectHeroReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hero_id_ = from.hero_id_;
  // @@protoc_insertion_point(copy_constructor:NetProto.SelectHeroReq)
}

void SelectHeroReq::SharedCtor() {
  hero_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SelectHeroReq::~SelectHeroReq() {
  // @@protoc_insertion_point(destructor:NetProto.SelectHeroReq)
  SharedDtor();
}

void SelectHeroReq::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void SelectHeroReq::ArenaDtor(void* object) {
  SelectHeroReq* _this = reinterpret_cast< SelectHeroReq* >(object);
  (void)_this;
}
void SelectHeroReq::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SelectHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectHeroReq::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectHeroReq& SelectHeroReq::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectHeroReq* SelectHeroReq::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SelectHeroReq>(arena);
}

void SelectHeroReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SelectHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hero_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SelectHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SelectHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hero_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SelectHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SelectHeroReq)
  return false;
#undef DO_
}

void SelectHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SelectHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hero_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SelectHeroReq)
}

::google::protobuf::uint8* SelectHeroReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SelectHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hero_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SelectHeroReq)
  return target;
}

size_t SelectHeroReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SelectHeroReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hero_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SelectHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectHeroReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectHeroReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SelectHeroReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SelectHeroReq)
    MergeFrom(*source);
  }
}

void SelectHeroReq::MergeFrom(const SelectHeroReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SelectHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hero_id() != 0) {
    set_hero_id(from.hero_id());
  }
}

void SelectHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SelectHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectHeroReq::CopyFrom(const SelectHeroReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SelectHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectHeroReq::IsInitialized() const {
  return true;
}

void SelectHeroReq::Swap(SelectHeroReq* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SelectHeroReq* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SelectHeroReq::UnsafeArenaSwap(SelectHeroReq* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SelectHeroReq::InternalSwap(SelectHeroReq* other) {
  using std::swap;
  swap(hero_id_, other->hero_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectHeroReq::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectHeroReq

// uint64 hero_id = 1;
void SelectHeroReq::clear_hero_id() {
  hero_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SelectHeroReq::hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SelectHeroReq.hero_id)
  return hero_id_;
}
void SelectHeroReq::set_hero_id(::google::protobuf::uint64 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SelectHeroReq.hero_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectHeroRsp::kHeroIdFieldNumber;
const int SelectHeroRsp::kIsSuccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectHeroRsp::SelectHeroRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SelectHeroRsp)
}
SelectHeroRsp::SelectHeroRsp(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SelectHeroRsp)
}
SelectHeroRsp::SelectHeroRsp(const SelectHeroRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hero_id_, &from.hero_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_succ_) -
    reinterpret_cast<char*>(&hero_id_)) + sizeof(is_succ_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SelectHeroRsp)
}

void SelectHeroRsp::SharedCtor() {
  ::memset(&hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succ_) -
      reinterpret_cast<char*>(&hero_id_)) + sizeof(is_succ_));
  _cached_size_ = 0;
}

SelectHeroRsp::~SelectHeroRsp() {
  // @@protoc_insertion_point(destructor:NetProto.SelectHeroRsp)
  SharedDtor();
}

void SelectHeroRsp::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void SelectHeroRsp::ArenaDtor(void* object) {
  SelectHeroRsp* _this = reinterpret_cast< SelectHeroRsp* >(object);
  (void)_this;
}
void SelectHeroRsp::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SelectHeroRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectHeroRsp::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectHeroRsp& SelectHeroRsp::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectHeroRsp* SelectHeroRsp::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SelectHeroRsp>(arena);
}

void SelectHeroRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SelectHeroRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succ_) -
      reinterpret_cast<char*>(&hero_id_)) + sizeof(is_succ_));
  _internal_metadata_.Clear();
}

bool SelectHeroRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SelectHeroRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hero_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_succ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SelectHeroRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SelectHeroRsp)
  return false;
#undef DO_
}

void SelectHeroRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SelectHeroRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hero_id(), output);
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_succ(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SelectHeroRsp)
}

::google::protobuf::uint8* SelectHeroRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SelectHeroRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hero_id(), target);
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_succ(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SelectHeroRsp)
  return target;
}

size_t SelectHeroRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SelectHeroRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hero_id());
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectHeroRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SelectHeroRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectHeroRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectHeroRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SelectHeroRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SelectHeroRsp)
    MergeFrom(*source);
  }
}

void SelectHeroRsp::MergeFrom(const SelectHeroRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SelectHeroRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hero_id() != 0) {
    set_hero_id(from.hero_id());
  }
  if (from.is_succ() != 0) {
    set_is_succ(from.is_succ());
  }
}

void SelectHeroRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SelectHeroRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectHeroRsp::CopyFrom(const SelectHeroRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SelectHeroRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectHeroRsp::IsInitialized() const {
  return true;
}

void SelectHeroRsp::Swap(SelectHeroRsp* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SelectHeroRsp* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SelectHeroRsp::UnsafeArenaSwap(SelectHeroRsp* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SelectHeroRsp::InternalSwap(SelectHeroRsp* other) {
  using std::swap;
  swap(hero_id_, other->hero_id_);
  swap(is_succ_, other->is_succ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectHeroRsp::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectHeroRsp

// uint64 hero_id = 1;
void SelectHeroRsp::clear_hero_id() {
  hero_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SelectHeroRsp::hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SelectHeroRsp.hero_id)
  return hero_id_;
}
void SelectHeroRsp::set_hero_id(::google::protobuf::uint64 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SelectHeroRsp.hero_id)
}

// bool is_succ = 2;
void SelectHeroRsp::clear_is_succ() {
  is_succ_ = false;
}
bool SelectHeroRsp::is_succ() const {
  // @@protoc_insertion_point(field_get:NetProto.SelectHeroRsp.is_succ)
  return is_succ_;
}
void SelectHeroRsp::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SelectHeroRsp.is_succ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneObjectDisappear::kObjidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneObjectDisappear::SceneObjectDisappear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneObjectDisappear)
}
SceneObjectDisappear::SceneObjectDisappear(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  objids_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneObjectDisappear)
}
SceneObjectDisappear::SceneObjectDisappear(const SceneObjectDisappear& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objids_(from.objids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneObjectDisappear)
}

void SceneObjectDisappear::SharedCtor() {
  _cached_size_ = 0;
}

SceneObjectDisappear::~SceneObjectDisappear() {
  // @@protoc_insertion_point(destructor:NetProto.SceneObjectDisappear)
  SharedDtor();
}

void SceneObjectDisappear::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void SceneObjectDisappear::ArenaDtor(void* object) {
  SceneObjectDisappear* _this = reinterpret_cast< SceneObjectDisappear* >(object);
  (void)_this;
}
void SceneObjectDisappear::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SceneObjectDisappear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneObjectDisappear::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneObjectDisappear& SceneObjectDisappear::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneObjectDisappear* SceneObjectDisappear::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SceneObjectDisappear>(arena);
}

void SceneObjectDisappear::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneObjectDisappear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objids_.Clear();
  _internal_metadata_.Clear();
}

bool SceneObjectDisappear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneObjectDisappear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 objids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_objids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_objids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneObjectDisappear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneObjectDisappear)
  return false;
#undef DO_
}

void SceneObjectDisappear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneObjectDisappear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 objids = 1;
  if (this->objids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _objids_cached_byte_size_));
  }
  for (int i = 0, n = this->objids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->objids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneObjectDisappear)
}

::google::protobuf::uint8* SceneObjectDisappear::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneObjectDisappear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 objids = 1;
  if (this->objids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _objids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->objids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneObjectDisappear)
  return target;
}

size_t SceneObjectDisappear::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneObjectDisappear)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 objids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->objids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _objids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneObjectDisappear::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneObjectDisappear)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectDisappear* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneObjectDisappear>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneObjectDisappear)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneObjectDisappear)
    MergeFrom(*source);
  }
}

void SceneObjectDisappear::MergeFrom(const SceneObjectDisappear& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneObjectDisappear)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objids_.MergeFrom(from.objids_);
}

void SceneObjectDisappear::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneObjectDisappear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectDisappear::CopyFrom(const SceneObjectDisappear& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneObjectDisappear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectDisappear::IsInitialized() const {
  return true;
}

void SceneObjectDisappear::Swap(SceneObjectDisappear* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneObjectDisappear* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneObjectDisappear::UnsafeArenaSwap(SceneObjectDisappear* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneObjectDisappear::InternalSwap(SceneObjectDisappear* other) {
  using std::swap;
  objids_.InternalSwap(&other->objids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneObjectDisappear::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneObjectDisappear

// repeated uint64 objids = 1;
int SceneObjectDisappear::objids_size() const {
  return objids_.size();
}
void SceneObjectDisappear::clear_objids() {
  objids_.Clear();
}
::google::protobuf::uint64 SceneObjectDisappear::objids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObjectDisappear.objids)
  return objids_.Get(index);
}
void SceneObjectDisappear::set_objids(int index, ::google::protobuf::uint64 value) {
  objids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.SceneObjectDisappear.objids)
}
void SceneObjectDisappear::add_objids(::google::protobuf::uint64 value) {
  objids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.SceneObjectDisappear.objids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SceneObjectDisappear::objids() const {
  // @@protoc_insertion_point(field_list:NetProto.SceneObjectDisappear.objids)
  return objids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SceneObjectDisappear::mutable_objids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.SceneObjectDisappear.objids)
  return &objids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SceneObjectState::_slow_mutable_pos() {
  pos_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector3* SceneObjectState::_slow_release_pos() {
  if (pos_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector3* temp = new ::NetProto::PBVector3(*pos_);
    pos_ = NULL;
    return temp;
  }
}
::NetProto::PBVector3* SceneObjectState::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.SceneObjectState.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void SceneObjectState::_slow_set_allocated_pos(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector3** pos) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*pos) == NULL) {
      message_arena->Own(*pos);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*pos)) {
      ::NetProto::PBVector3* new_pos = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
            message_arena);
      new_pos->CopyFrom(**pos);
      *pos = new_pos;
    }
}
void SceneObjectState::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector3* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneObjectState.pos)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneObjectState::kObjidFieldNumber;
const int SceneObjectState::kObjTypeFieldNumber;
const int SceneObjectState::kModelIdFieldNumber;
const int SceneObjectState::kPosFieldNumber;
const int SceneObjectState::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneObjectState::SceneObjectState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneObjectState)
}
SceneObjectState::SceneObjectState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneObjectState)
}
SceneObjectState::SceneObjectState(const SceneObjectState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector3(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&objid_, &from.objid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
    reinterpret_cast<char*>(&objid_)) + sizeof(rotation_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneObjectState)
}

void SceneObjectState::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(rotation_));
  _cached_size_ = 0;
}

SceneObjectState::~SceneObjectState() {
  // @@protoc_insertion_point(destructor:NetProto.SceneObjectState)
  SharedDtor();
}

void SceneObjectState::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete pos_;
}

void SceneObjectState::ArenaDtor(void* object) {
  SceneObjectState* _this = reinterpret_cast< SceneObjectState* >(object);
  (void)_this;
}
void SceneObjectState::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SceneObjectState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneObjectState::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneObjectState& SceneObjectState::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneObjectState* SceneObjectState::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SceneObjectState>(arena);
}

void SceneObjectState::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneObjectState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&objid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&objid_)) + sizeof(rotation_));
  _internal_metadata_.Clear();
}

bool SceneObjectState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneObjectState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 objid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.ESceneObject obj_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_type(static_cast< ::NetProto::ESceneObject >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 model_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneObjectState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneObjectState)
  return false;
#undef DO_
}

void SceneObjectState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneObjectState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objid = 1;
  if (this->objid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->objid(), output);
  }

  // .NetProto.ESceneObject obj_type = 2;
  if (this->obj_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->obj_type(), output);
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->model_id(), output);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pos_, output);
  }

  // float rotation = 5;
  if (this->rotation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneObjectState)
}

::google::protobuf::uint8* SceneObjectState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneObjectState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objid = 1;
  if (this->objid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->objid(), target);
  }

  // .NetProto.ESceneObject obj_type = 2;
  if (this->obj_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->obj_type(), target);
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->model_id(), target);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pos_, deterministic, target);
  }

  // float rotation = 5;
  if (this->rotation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rotation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneObjectState)
  return target;
}

size_t SceneObjectState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneObjectState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint64 objid = 1;
  if (this->objid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objid());
  }

  // .NetProto.ESceneObject obj_type = 2;
  if (this->obj_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_type());
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->model_id());
  }

  // float rotation = 5;
  if (this->rotation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneObjectState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneObjectState)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneObjectState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneObjectState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneObjectState)
    MergeFrom(*source);
  }
}

void SceneObjectState::MergeFrom(const SceneObjectState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneObjectState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector3::MergeFrom(from.pos());
  }
  if (from.objid() != 0) {
    set_objid(from.objid());
  }
  if (from.obj_type() != 0) {
    set_obj_type(from.obj_type());
  }
  if (from.model_id() != 0) {
    set_model_id(from.model_id());
  }
  if (from.rotation() != 0) {
    set_rotation(from.rotation());
  }
}

void SceneObjectState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneObjectState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectState::CopyFrom(const SceneObjectState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneObjectState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectState::IsInitialized() const {
  return true;
}

void SceneObjectState::Swap(SceneObjectState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneObjectState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneObjectState::UnsafeArenaSwap(SceneObjectState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneObjectState::InternalSwap(SceneObjectState* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(objid_, other->objid_);
  swap(obj_type_, other->obj_type_);
  swap(model_id_, other->model_id_);
  swap(rotation_, other->rotation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneObjectState::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneObjectState

// uint64 objid = 1;
void SceneObjectState::clear_objid() {
  objid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneObjectState::objid() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObjectState.objid)
  return objid_;
}
void SceneObjectState::set_objid(::google::protobuf::uint64 value) {
  
  objid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneObjectState.objid)
}

// .NetProto.ESceneObject obj_type = 2;
void SceneObjectState::clear_obj_type() {
  obj_type_ = 0;
}
::NetProto::ESceneObject SceneObjectState::obj_type() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObjectState.obj_type)
  return static_cast< ::NetProto::ESceneObject >(obj_type_);
}
void SceneObjectState::set_obj_type(::NetProto::ESceneObject value) {
  
  obj_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneObjectState.obj_type)
}

// int32 model_id = 3;
void SceneObjectState::clear_model_id() {
  model_id_ = 0;
}
::google::protobuf::int32 SceneObjectState::model_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObjectState.model_id)
  return model_id_;
}
void SceneObjectState::set_model_id(::google::protobuf::int32 value) {
  
  model_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneObjectState.model_id)
}

// .NetProto.PBVector3 pos = 4;
bool SceneObjectState::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void SceneObjectState::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::NetProto::PBVector3& SceneObjectState::pos() const {
  const ::NetProto::PBVector3* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.SceneObjectState.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector3*>(
      &::NetProto::_PBVector3_default_instance_);
}
::NetProto::PBVector3* SceneObjectState::mutable_pos() {
  
  if (pos_ == NULL) {
    _slow_mutable_pos();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.SceneObjectState.pos)
  return pos_;
}
::NetProto::PBVector3* SceneObjectState::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.SceneObjectState.pos)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_pos();
  } else {
    ::NetProto::PBVector3* temp = pos_;
    pos_ = NULL;
    return temp;
  }
}
 void SceneObjectState::set_allocated_pos(::NetProto::PBVector3* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos != NULL) {
    _slow_set_allocated_pos(message_arena, &pos);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneObjectState.pos)
}

// float rotation = 5;
void SceneObjectState::clear_rotation() {
  rotation_ = 0;
}
float SceneObjectState::rotation() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObjectState.rotation)
  return rotation_;
}
void SceneObjectState::set_rotation(float value) {
  
  rotation_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneObjectState.rotation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void MoveObjectState::_slow_mutable_obj_state() {
  obj_state_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::SceneObjectState >(
      GetArenaNoVirtual());
}
::NetProto::SceneObjectState* MoveObjectState::_slow_release_obj_state() {
  if (obj_state_ == NULL) {
    return NULL;
  } else {
    ::NetProto::SceneObjectState* temp = new ::NetProto::SceneObjectState(*obj_state_);
    obj_state_ = NULL;
    return temp;
  }
}
::NetProto::SceneObjectState* MoveObjectState::unsafe_arena_release_obj_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.MoveObjectState.obj_state)
  
  ::NetProto::SceneObjectState* temp = obj_state_;
  obj_state_ = NULL;
  return temp;
}
void MoveObjectState::_slow_set_allocated_obj_state(
    ::google::protobuf::Arena* message_arena, ::NetProto::SceneObjectState** obj_state) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*obj_state) == NULL) {
      message_arena->Own(*obj_state);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*obj_state)) {
      ::NetProto::SceneObjectState* new_obj_state = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::SceneObjectState >(
            message_arena);
      new_obj_state->CopyFrom(**obj_state);
      *obj_state = new_obj_state;
    }
}
void MoveObjectState::unsafe_arena_set_allocated_obj_state(
    ::NetProto::SceneObjectState* obj_state) {
  if (GetArenaNoVirtual() == NULL) {
    delete obj_state_;
  }
  obj_state_ = obj_state;
  if (obj_state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.MoveObjectState.obj_state)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveObjectState::kObjStateFieldNumber;
const int MoveObjectState::kRadiusFieldNumber;
const int MoveObjectState::kHeightFieldNumber;
const int MoveObjectState::kMassFieldNumber;
const int MoveObjectState::kMaxSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveObjectState::MoveObjectState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.MoveObjectState)
}
MoveObjectState::MoveObjectState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.MoveObjectState)
}
MoveObjectState::MoveObjectState(const MoveObjectState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_obj_state()) {
    obj_state_ = new ::NetProto::SceneObjectState(*from.obj_state_);
  } else {
    obj_state_ = NULL;
  }
  ::memcpy(&radius_, &from.radius_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_speed_) -
    reinterpret_cast<char*>(&radius_)) + sizeof(max_speed_));
  // @@protoc_insertion_point(copy_constructor:NetProto.MoveObjectState)
}

void MoveObjectState::SharedCtor() {
  ::memset(&obj_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_speed_) -
      reinterpret_cast<char*>(&obj_state_)) + sizeof(max_speed_));
  _cached_size_ = 0;
}

MoveObjectState::~MoveObjectState() {
  // @@protoc_insertion_point(destructor:NetProto.MoveObjectState)
  SharedDtor();
}

void MoveObjectState::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete obj_state_;
}

void MoveObjectState::ArenaDtor(void* object) {
  MoveObjectState* _this = reinterpret_cast< MoveObjectState* >(object);
  (void)_this;
}
void MoveObjectState::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MoveObjectState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveObjectState::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveObjectState& MoveObjectState::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

MoveObjectState* MoveObjectState::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MoveObjectState>(arena);
}

void MoveObjectState::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.MoveObjectState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && obj_state_ != NULL) {
    delete obj_state_;
  }
  obj_state_ = NULL;
  ::memset(&radius_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_speed_) -
      reinterpret_cast<char*>(&radius_)) + sizeof(max_speed_));
  _internal_metadata_.Clear();
}

bool MoveObjectState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.MoveObjectState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.SceneObjectState obj_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 radius = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mass = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.MoveObjectState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.MoveObjectState)
  return false;
#undef DO_
}

void MoveObjectState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.MoveObjectState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.SceneObjectState obj_state = 1;
  if (this->has_obj_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->obj_state_, output);
  }

  // int32 radius = 2;
  if (this->radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->radius(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // int32 mass = 4;
  if (this->mass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mass(), output);
  }

  // int32 max_speed = 5;
  if (this->max_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_speed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.MoveObjectState)
}

::google::protobuf::uint8* MoveObjectState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.MoveObjectState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.SceneObjectState obj_state = 1;
  if (this->has_obj_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->obj_state_, deterministic, target);
  }

  // int32 radius = 2;
  if (this->radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->radius(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // int32 mass = 4;
  if (this->mass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mass(), target);
  }

  // int32 max_speed = 5;
  if (this->max_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_speed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.MoveObjectState)
  return target;
}

size_t MoveObjectState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.MoveObjectState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.SceneObjectState obj_state = 1;
  if (this->has_obj_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->obj_state_);
  }

  // int32 radius = 2;
  if (this->radius() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->radius());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // int32 mass = 4;
  if (this->mass() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mass());
  }

  // int32 max_speed = 5;
  if (this->max_speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_speed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveObjectState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.MoveObjectState)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveObjectState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveObjectState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.MoveObjectState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.MoveObjectState)
    MergeFrom(*source);
  }
}

void MoveObjectState::MergeFrom(const MoveObjectState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.MoveObjectState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_obj_state()) {
    mutable_obj_state()->::NetProto::SceneObjectState::MergeFrom(from.obj_state());
  }
  if (from.radius() != 0) {
    set_radius(from.radius());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.mass() != 0) {
    set_mass(from.mass());
  }
  if (from.max_speed() != 0) {
    set_max_speed(from.max_speed());
  }
}

void MoveObjectState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.MoveObjectState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveObjectState::CopyFrom(const MoveObjectState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.MoveObjectState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveObjectState::IsInitialized() const {
  return true;
}

void MoveObjectState::Swap(MoveObjectState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MoveObjectState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MoveObjectState::UnsafeArenaSwap(MoveObjectState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MoveObjectState::InternalSwap(MoveObjectState* other) {
  using std::swap;
  swap(obj_state_, other->obj_state_);
  swap(radius_, other->radius_);
  swap(height_, other->height_);
  swap(mass_, other->mass_);
  swap(max_speed_, other->max_speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoveObjectState::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoveObjectState

// .NetProto.SceneObjectState obj_state = 1;
bool MoveObjectState::has_obj_state() const {
  return this != internal_default_instance() && obj_state_ != NULL;
}
void MoveObjectState::clear_obj_state() {
  if (GetArenaNoVirtual() == NULL && obj_state_ != NULL) delete obj_state_;
  obj_state_ = NULL;
}
const ::NetProto::SceneObjectState& MoveObjectState::obj_state() const {
  const ::NetProto::SceneObjectState* p = obj_state_;
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectState.obj_state)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::SceneObjectState*>(
      &::NetProto::_SceneObjectState_default_instance_);
}
::NetProto::SceneObjectState* MoveObjectState::mutable_obj_state() {
  
  if (obj_state_ == NULL) {
    _slow_mutable_obj_state();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MoveObjectState.obj_state)
  return obj_state_;
}
::NetProto::SceneObjectState* MoveObjectState::release_obj_state() {
  // @@protoc_insertion_point(field_release:NetProto.MoveObjectState.obj_state)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_obj_state();
  } else {
    ::NetProto::SceneObjectState* temp = obj_state_;
    obj_state_ = NULL;
    return temp;
  }
}
 void MoveObjectState::set_allocated_obj_state(::NetProto::SceneObjectState* obj_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete obj_state_;
  }
  if (obj_state != NULL) {
    _slow_set_allocated_obj_state(message_arena, &obj_state);
  }
  obj_state_ = obj_state;
  if (obj_state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MoveObjectState.obj_state)
}

// int32 radius = 2;
void MoveObjectState::clear_radius() {
  radius_ = 0;
}
::google::protobuf::int32 MoveObjectState::radius() const {
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectState.radius)
  return radius_;
}
void MoveObjectState::set_radius(::google::protobuf::int32 value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MoveObjectState.radius)
}

// int32 height = 3;
void MoveObjectState::clear_height() {
  height_ = 0;
}
::google::protobuf::int32 MoveObjectState::height() const {
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectState.height)
  return height_;
}
void MoveObjectState::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MoveObjectState.height)
}

// int32 mass = 4;
void MoveObjectState::clear_mass() {
  mass_ = 0;
}
::google::protobuf::int32 MoveObjectState::mass() const {
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectState.mass)
  return mass_;
}
void MoveObjectState::set_mass(::google::protobuf::int32 value) {
  
  mass_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MoveObjectState.mass)
}

// int32 max_speed = 5;
void MoveObjectState::clear_max_speed() {
  max_speed_ = 0;
}
::google::protobuf::int32 MoveObjectState::max_speed() const {
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectState.max_speed)
  return max_speed_;
}
void MoveObjectState::set_max_speed(::google::protobuf::int32 value) {
  
  max_speed_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MoveObjectState.max_speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void MoveObjectMutableState::_slow_mutable_volecity() {
  volecity_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector3* MoveObjectMutableState::_slow_release_volecity() {
  if (volecity_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector3* temp = new ::NetProto::PBVector3(*volecity_);
    volecity_ = NULL;
    return temp;
  }
}
::NetProto::PBVector3* MoveObjectMutableState::unsafe_arena_release_volecity() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.MoveObjectMutableState.volecity)
  
  ::NetProto::PBVector3* temp = volecity_;
  volecity_ = NULL;
  return temp;
}
void MoveObjectMutableState::_slow_set_allocated_volecity(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector3** volecity) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*volecity) == NULL) {
      message_arena->Own(*volecity);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*volecity)) {
      ::NetProto::PBVector3* new_volecity = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
            message_arena);
      new_volecity->CopyFrom(**volecity);
      *volecity = new_volecity;
    }
}
void MoveObjectMutableState::unsafe_arena_set_allocated_volecity(
    ::NetProto::PBVector3* volecity) {
  if (GetArenaNoVirtual() == NULL) {
    delete volecity_;
  }
  volecity_ = volecity;
  if (volecity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.MoveObjectMutableState.volecity)
}
void MoveObjectMutableState::_slow_mutable_pos() {
  pos_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector3* MoveObjectMutableState::_slow_release_pos() {
  if (pos_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector3* temp = new ::NetProto::PBVector3(*pos_);
    pos_ = NULL;
    return temp;
  }
}
::NetProto::PBVector3* MoveObjectMutableState::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.MoveObjectMutableState.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void MoveObjectMutableState::_slow_set_allocated_pos(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector3** pos) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*pos) == NULL) {
      message_arena->Own(*pos);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*pos)) {
      ::NetProto::PBVector3* new_pos = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
            message_arena);
      new_pos->CopyFrom(**pos);
      *pos = new_pos;
    }
}
void MoveObjectMutableState::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector3* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.MoveObjectMutableState.pos)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveObjectMutableState::kObjidFieldNumber;
const int MoveObjectMutableState::kMoveAgentStateFieldNumber;
const int MoveObjectMutableState::kVolecityFieldNumber;
const int MoveObjectMutableState::kPosFieldNumber;
const int MoveObjectMutableState::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveObjectMutableState::MoveObjectMutableState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.MoveObjectMutableState)
}
MoveObjectMutableState::MoveObjectMutableState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.MoveObjectMutableState)
}
MoveObjectMutableState::MoveObjectMutableState(const MoveObjectMutableState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_volecity()) {
    volecity_ = new ::NetProto::PBVector3(*from.volecity_);
  } else {
    volecity_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector3(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&objid_, &from.objid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
    reinterpret_cast<char*>(&objid_)) + sizeof(rotation_));
  // @@protoc_insertion_point(copy_constructor:NetProto.MoveObjectMutableState)
}

void MoveObjectMutableState::SharedCtor() {
  ::memset(&volecity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&volecity_)) + sizeof(rotation_));
  _cached_size_ = 0;
}

MoveObjectMutableState::~MoveObjectMutableState() {
  // @@protoc_insertion_point(destructor:NetProto.MoveObjectMutableState)
  SharedDtor();
}

void MoveObjectMutableState::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete volecity_;
  if (this != internal_default_instance()) delete pos_;
}

void MoveObjectMutableState::ArenaDtor(void* object) {
  MoveObjectMutableState* _this = reinterpret_cast< MoveObjectMutableState* >(object);
  (void)_this;
}
void MoveObjectMutableState::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MoveObjectMutableState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveObjectMutableState::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveObjectMutableState& MoveObjectMutableState::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

MoveObjectMutableState* MoveObjectMutableState::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MoveObjectMutableState>(arena);
}

void MoveObjectMutableState::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.MoveObjectMutableState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && volecity_ != NULL) {
    delete volecity_;
  }
  volecity_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&objid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&objid_)) + sizeof(rotation_));
  _internal_metadata_.Clear();
}

bool MoveObjectMutableState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.MoveObjectMutableState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 objid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.EMoveAgentState move_agent_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_move_agent_state(static_cast< ::NetProto::EMoveAgentState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 volecity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_volecity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.MoveObjectMutableState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.MoveObjectMutableState)
  return false;
#undef DO_
}

void MoveObjectMutableState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.MoveObjectMutableState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objid = 1;
  if (this->objid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->objid(), output);
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->move_agent_state(), output);
  }

  // .NetProto.PBVector3 volecity = 3;
  if (this->has_volecity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->volecity_, output);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pos_, output);
  }

  // float rotation = 5;
  if (this->rotation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.MoveObjectMutableState)
}

::google::protobuf::uint8* MoveObjectMutableState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.MoveObjectMutableState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objid = 1;
  if (this->objid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->objid(), target);
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->move_agent_state(), target);
  }

  // .NetProto.PBVector3 volecity = 3;
  if (this->has_volecity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->volecity_, deterministic, target);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pos_, deterministic, target);
  }

  // float rotation = 5;
  if (this->rotation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rotation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.MoveObjectMutableState)
  return target;
}

size_t MoveObjectMutableState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.MoveObjectMutableState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 volecity = 3;
  if (this->has_volecity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->volecity_);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint64 objid = 1;
  if (this->objid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objid());
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->move_agent_state());
  }

  // float rotation = 5;
  if (this->rotation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveObjectMutableState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.MoveObjectMutableState)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveObjectMutableState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveObjectMutableState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.MoveObjectMutableState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.MoveObjectMutableState)
    MergeFrom(*source);
  }
}

void MoveObjectMutableState::MergeFrom(const MoveObjectMutableState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.MoveObjectMutableState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_volecity()) {
    mutable_volecity()->::NetProto::PBVector3::MergeFrom(from.volecity());
  }
  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector3::MergeFrom(from.pos());
  }
  if (from.objid() != 0) {
    set_objid(from.objid());
  }
  if (from.move_agent_state() != 0) {
    set_move_agent_state(from.move_agent_state());
  }
  if (from.rotation() != 0) {
    set_rotation(from.rotation());
  }
}

void MoveObjectMutableState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.MoveObjectMutableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveObjectMutableState::CopyFrom(const MoveObjectMutableState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.MoveObjectMutableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveObjectMutableState::IsInitialized() const {
  return true;
}

void MoveObjectMutableState::Swap(MoveObjectMutableState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MoveObjectMutableState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MoveObjectMutableState::UnsafeArenaSwap(MoveObjectMutableState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MoveObjectMutableState::InternalSwap(MoveObjectMutableState* other) {
  using std::swap;
  swap(volecity_, other->volecity_);
  swap(pos_, other->pos_);
  swap(objid_, other->objid_);
  swap(move_agent_state_, other->move_agent_state_);
  swap(rotation_, other->rotation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoveObjectMutableState::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoveObjectMutableState

// uint64 objid = 1;
void MoveObjectMutableState::clear_objid() {
  objid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MoveObjectMutableState::objid() const {
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectMutableState.objid)
  return objid_;
}
void MoveObjectMutableState::set_objid(::google::protobuf::uint64 value) {
  
  objid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MoveObjectMutableState.objid)
}

// .NetProto.EMoveAgentState move_agent_state = 2;
void MoveObjectMutableState::clear_move_agent_state() {
  move_agent_state_ = 0;
}
::NetProto::EMoveAgentState MoveObjectMutableState::move_agent_state() const {
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectMutableState.move_agent_state)
  return static_cast< ::NetProto::EMoveAgentState >(move_agent_state_);
}
void MoveObjectMutableState::set_move_agent_state(::NetProto::EMoveAgentState value) {
  
  move_agent_state_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MoveObjectMutableState.move_agent_state)
}

// .NetProto.PBVector3 volecity = 3;
bool MoveObjectMutableState::has_volecity() const {
  return this != internal_default_instance() && volecity_ != NULL;
}
void MoveObjectMutableState::clear_volecity() {
  if (GetArenaNoVirtual() == NULL && volecity_ != NULL) delete volecity_;
  volecity_ = NULL;
}
const ::NetProto::PBVector3& MoveObjectMutableState::volecity() const {
  const ::NetProto::PBVector3* p = volecity_;
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectMutableState.volecity)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector3*>(
      &::NetProto::_PBVector3_default_instance_);
}
::NetProto::PBVector3* MoveObjectMutableState::mutable_volecity() {
  
  if (volecity_ == NULL) {
    _slow_mutable_volecity();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MoveObjectMutableState.volecity)
  return volecity_;
}
::NetProto::PBVector3* MoveObjectMutableState::release_volecity() {
  // @@protoc_insertion_point(field_release:NetProto.MoveObjectMutableState.volecity)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_volecity();
  } else {
    ::NetProto::PBVector3* temp = volecity_;
    volecity_ = NULL;
    return temp;
  }
}
 void MoveObjectMutableState::set_allocated_volecity(::NetProto::PBVector3* volecity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete volecity_;
  }
  if (volecity != NULL) {
    _slow_set_allocated_volecity(message_arena, &volecity);
  }
  volecity_ = volecity;
  if (volecity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MoveObjectMutableState.volecity)
}

// .NetProto.PBVector3 pos = 4;
bool MoveObjectMutableState::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void MoveObjectMutableState::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::NetProto::PBVector3& MoveObjectMutableState::pos() const {
  const ::NetProto::PBVector3* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectMutableState.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector3*>(
      &::NetProto::_PBVector3_default_instance_);
}
::NetProto::PBVector3* MoveObjectMutableState::mutable_pos() {
  
  if (pos_ == NULL) {
    _slow_mutable_pos();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MoveObjectMutableState.pos)
  return pos_;
}
::NetProto::PBVector3* MoveObjectMutableState::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.MoveObjectMutableState.pos)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_pos();
  } else {
    ::NetProto::PBVector3* temp = pos_;
    pos_ = NULL;
    return temp;
  }
}
 void MoveObjectMutableState::set_allocated_pos(::NetProto::PBVector3* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos != NULL) {
    _slow_set_allocated_pos(message_arena, &pos);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MoveObjectMutableState.pos)
}

// float rotation = 5;
void MoveObjectMutableState::clear_rotation() {
  rotation_ = 0;
}
float MoveObjectMutableState::rotation() const {
  // @@protoc_insertion_point(field_get:NetProto.MoveObjectMutableState.rotation)
  return rotation_;
}
void MoveObjectMutableState::set_rotation(float value) {
  
  rotation_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MoveObjectMutableState.rotation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void MoveToPos::_slow_mutable_pos() {
  pos_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector2 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector2* MoveToPos::_slow_release_pos() {
  if (pos_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector2* temp = new ::NetProto::PBVector2(*pos_);
    pos_ = NULL;
    return temp;
  }
}
::NetProto::PBVector2* MoveToPos::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.MoveToPos.pos)
  
  ::NetProto::PBVector2* temp = pos_;
  pos_ = NULL;
  return temp;
}
void MoveToPos::_slow_set_allocated_pos(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector2** pos) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*pos) == NULL) {
      message_arena->Own(*pos);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*pos)) {
      ::NetProto::PBVector2* new_pos = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector2 >(
            message_arena);
      new_pos->CopyFrom(**pos);
      *pos = new_pos;
    }
}
void MoveToPos::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector2* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.MoveToPos.pos)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveToPos::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveToPos::MoveToPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.MoveToPos)
}
MoveToPos::MoveToPos(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.MoveToPos)
}
MoveToPos::MoveToPos(const MoveToPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector2(*from.pos_);
  } else {
    pos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.MoveToPos)
}

void MoveToPos::SharedCtor() {
  pos_ = NULL;
  _cached_size_ = 0;
}

MoveToPos::~MoveToPos() {
  // @@protoc_insertion_point(destructor:NetProto.MoveToPos)
  SharedDtor();
}

void MoveToPos::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete pos_;
}

void MoveToPos::ArenaDtor(void* object) {
  MoveToPos* _this = reinterpret_cast< MoveToPos* >(object);
  (void)_this;
}
void MoveToPos::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MoveToPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveToPos::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveToPos& MoveToPos::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

MoveToPos* MoveToPos::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MoveToPos>(arena);
}

void MoveToPos::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.MoveToPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  _internal_metadata_.Clear();
}

bool MoveToPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.MoveToPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.PBVector2 pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.MoveToPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.MoveToPos)
  return false;
#undef DO_
}

void MoveToPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.MoveToPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.MoveToPos)
}

::google::protobuf::uint8* MoveToPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.MoveToPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.MoveToPos)
  return target;
}

size_t MoveToPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.MoveToPos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector2 pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveToPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.MoveToPos)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveToPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveToPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.MoveToPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.MoveToPos)
    MergeFrom(*source);
  }
}

void MoveToPos::MergeFrom(const MoveToPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.MoveToPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector2::MergeFrom(from.pos());
  }
}

void MoveToPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.MoveToPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveToPos::CopyFrom(const MoveToPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.MoveToPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveToPos::IsInitialized() const {
  return true;
}

void MoveToPos::Swap(MoveToPos* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MoveToPos* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MoveToPos::UnsafeArenaSwap(MoveToPos* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MoveToPos::InternalSwap(MoveToPos* other) {
  using std::swap;
  swap(pos_, other->pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoveToPos::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoveToPos

// .NetProto.PBVector2 pos = 1;
bool MoveToPos::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void MoveToPos::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::NetProto::PBVector2& MoveToPos::pos() const {
  const ::NetProto::PBVector2* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.MoveToPos.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector2*>(
      &::NetProto::_PBVector2_default_instance_);
}
::NetProto::PBVector2* MoveToPos::mutable_pos() {
  
  if (pos_ == NULL) {
    _slow_mutable_pos();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MoveToPos.pos)
  return pos_;
}
::NetProto::PBVector2* MoveToPos::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.MoveToPos.pos)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_pos();
  } else {
    ::NetProto::PBVector2* temp = pos_;
    pos_ = NULL;
    return temp;
  }
}
 void MoveToPos::set_allocated_pos(::NetProto::PBVector2* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos != NULL) {
    _slow_set_allocated_pos(message_arena, &pos);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MoveToPos.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void BattleOperation::_slow_mutable_pos() {
  pos_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector2 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector2* BattleOperation::_slow_release_pos() {
  if (pos_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector2* temp = new ::NetProto::PBVector2(*pos_);
    pos_ = NULL;
    return temp;
  }
}
::NetProto::PBVector2* BattleOperation::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.BattleOperation.pos)
  
  ::NetProto::PBVector2* temp = pos_;
  pos_ = NULL;
  return temp;
}
void BattleOperation::_slow_set_allocated_pos(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector2** pos) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*pos) == NULL) {
      message_arena->Own(*pos);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*pos)) {
      ::NetProto::PBVector2* new_pos = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector2 >(
            message_arena);
      new_pos->CopyFrom(**pos);
      *pos = new_pos;
    }
}
void BattleOperation::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector2* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.BattleOperation.pos)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleOperation::kOperaFieldNumber;
const int BattleOperation::kTargetIdFieldNumber;
const int BattleOperation::kDirFieldNumber;
const int BattleOperation::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleOperation::BattleOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.BattleOperation)
}
BattleOperation::BattleOperation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.BattleOperation)
}
BattleOperation::BattleOperation(const BattleOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector2(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&target_id_, &from.target_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dir_) -
    reinterpret_cast<char*>(&target_id_)) + sizeof(dir_));
  // @@protoc_insertion_point(copy_constructor:NetProto.BattleOperation)
}

void BattleOperation::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dir_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(dir_));
  _cached_size_ = 0;
}

BattleOperation::~BattleOperation() {
  // @@protoc_insertion_point(destructor:NetProto.BattleOperation)
  SharedDtor();
}

void BattleOperation::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete pos_;
}

void BattleOperation::ArenaDtor(void* object) {
  BattleOperation* _this = reinterpret_cast< BattleOperation* >(object);
  (void)_this;
}
void BattleOperation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BattleOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleOperation::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BattleOperation& BattleOperation::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

BattleOperation* BattleOperation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BattleOperation>(arena);
}

void BattleOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.BattleOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&target_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dir_) -
      reinterpret_cast<char*>(&target_id_)) + sizeof(dir_));
  _internal_metadata_.Clear();
}

bool BattleOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.BattleOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.EBattleOperation opera = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_opera(static_cast< ::NetProto::EBattleOperation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 target_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector2 pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.BattleOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.BattleOperation)
  return false;
#undef DO_
}

void BattleOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.BattleOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.EBattleOperation opera = 1;
  if (this->opera() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->opera(), output);
  }

  // uint64 target_id = 2;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_id(), output);
  }

  // float dir = 3;
  if (this->dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->dir(), output);
  }

  // .NetProto.PBVector2 pos = 4;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.BattleOperation)
}

::google::protobuf::uint8* BattleOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.BattleOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.EBattleOperation opera = 1;
  if (this->opera() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->opera(), target);
  }

  // uint64 target_id = 2;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_id(), target);
  }

  // float dir = 3;
  if (this->dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->dir(), target);
  }

  // .NetProto.PBVector2 pos = 4;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.BattleOperation)
  return target;
}

size_t BattleOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.BattleOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector2 pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint64 target_id = 2;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_id());
  }

  // .NetProto.EBattleOperation opera = 1;
  if (this->opera() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opera());
  }

  // float dir = 3;
  if (this->dir() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.BattleOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.BattleOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.BattleOperation)
    MergeFrom(*source);
  }
}

void BattleOperation::MergeFrom(const BattleOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.BattleOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector2::MergeFrom(from.pos());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
  if (from.opera() != 0) {
    set_opera(from.opera());
  }
  if (from.dir() != 0) {
    set_dir(from.dir());
  }
}

void BattleOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.BattleOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleOperation::CopyFrom(const BattleOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.BattleOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleOperation::IsInitialized() const {
  return true;
}

void BattleOperation::Swap(BattleOperation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BattleOperation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BattleOperation::UnsafeArenaSwap(BattleOperation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BattleOperation::InternalSwap(BattleOperation* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(target_id_, other->target_id_);
  swap(opera_, other->opera_);
  swap(dir_, other->dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleOperation::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleOperation

// .NetProto.EBattleOperation opera = 1;
void BattleOperation::clear_opera() {
  opera_ = 0;
}
::NetProto::EBattleOperation BattleOperation::opera() const {
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.opera)
  return static_cast< ::NetProto::EBattleOperation >(opera_);
}
void BattleOperation::set_opera(::NetProto::EBattleOperation value) {
  
  opera_ = value;
  // @@protoc_insertion_point(field_set:NetProto.BattleOperation.opera)
}

// uint64 target_id = 2;
void BattleOperation::clear_target_id() {
  target_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 BattleOperation::target_id() const {
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.target_id)
  return target_id_;
}
void BattleOperation::set_target_id(::google::protobuf::uint64 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.BattleOperation.target_id)
}

// float dir = 3;
void BattleOperation::clear_dir() {
  dir_ = 0;
}
float BattleOperation::dir() const {
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.dir)
  return dir_;
}
void BattleOperation::set_dir(float value) {
  
  dir_ = value;
  // @@protoc_insertion_point(field_set:NetProto.BattleOperation.dir)
}

// .NetProto.PBVector2 pos = 4;
bool BattleOperation::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void BattleOperation::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::NetProto::PBVector2& BattleOperation::pos() const {
  const ::NetProto::PBVector2* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector2*>(
      &::NetProto::_PBVector2_default_instance_);
}
::NetProto::PBVector2* BattleOperation::mutable_pos() {
  
  if (pos_ == NULL) {
    _slow_mutable_pos();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.BattleOperation.pos)
  return pos_;
}
::NetProto::PBVector2* BattleOperation::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.BattleOperation.pos)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_pos();
  } else {
    ::NetProto::PBVector2* temp = pos_;
    pos_ = NULL;
    return temp;
  }
}
 void BattleOperation::set_allocated_pos(::NetProto::PBVector2* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos != NULL) {
    _slow_set_allocated_pos(message_arena, &pos);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.BattleOperation.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ViewGrid::_slow_mutable_center() {
  center_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector2 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector2* ViewGrid::_slow_release_center() {
  if (center_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector2* temp = new ::NetProto::PBVector2(*center_);
    center_ = NULL;
    return temp;
  }
}
::NetProto::PBVector2* ViewGrid::unsafe_arena_release_center() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.ViewGrid.center)
  
  ::NetProto::PBVector2* temp = center_;
  center_ = NULL;
  return temp;
}
void ViewGrid::_slow_set_allocated_center(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector2** center) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*center) == NULL) {
      message_arena->Own(*center);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*center)) {
      ::NetProto::PBVector2* new_center = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector2 >(
            message_arena);
      new_center->CopyFrom(**center);
      *center = new_center;
    }
}
void ViewGrid::unsafe_arena_set_allocated_center(
    ::NetProto::PBVector2* center) {
  if (GetArenaNoVirtual() == NULL) {
    delete center_;
  }
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.ViewGrid.center)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewGrid::kCenterFieldNumber;
const int ViewGrid::kGridTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewGrid::ViewGrid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewGrid)
}
ViewGrid::ViewGrid(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewGrid)
}
ViewGrid::ViewGrid(const ViewGrid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::NetProto::PBVector2(*from.center_);
  } else {
    center_ = NULL;
  }
  grid_type_ = from.grid_type_;
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewGrid)
}

void ViewGrid::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grid_type_) -
      reinterpret_cast<char*>(&center_)) + sizeof(grid_type_));
  _cached_size_ = 0;
}

ViewGrid::~ViewGrid() {
  // @@protoc_insertion_point(destructor:NetProto.ViewGrid)
  SharedDtor();
}

void ViewGrid::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete center_;
}

void ViewGrid::ArenaDtor(void* object) {
  ViewGrid* _this = reinterpret_cast< ViewGrid* >(object);
  (void)_this;
}
void ViewGrid::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ViewGrid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewGrid::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewGrid& ViewGrid::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

ViewGrid* ViewGrid::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ViewGrid>(arena);
}

void ViewGrid::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
  grid_type_ = 0;
  _internal_metadata_.Clear();
}

bool ViewGrid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewGrid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.PBVector2 center = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 grid_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewGrid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewGrid)
  return false;
#undef DO_
}

void ViewGrid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 center = 1;
  if (this->has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->center_, output);
  }

  // int32 grid_type = 2;
  if (this->grid_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->grid_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewGrid)
}

::google::protobuf::uint8* ViewGrid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 center = 1;
  if (this->has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->center_, deterministic, target);
  }

  // int32 grid_type = 2;
  if (this->grid_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->grid_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewGrid)
  return target;
}

size_t ViewGrid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewGrid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector2 center = 1;
  if (this->has_center()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->center_);
  }

  // int32 grid_type = 2;
  if (this->grid_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grid_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewGrid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewGrid)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewGrid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewGrid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewGrid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewGrid)
    MergeFrom(*source);
  }
}

void ViewGrid::MergeFrom(const ViewGrid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewGrid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center()) {
    mutable_center()->::NetProto::PBVector2::MergeFrom(from.center());
  }
  if (from.grid_type() != 0) {
    set_grid_type(from.grid_type());
  }
}

void ViewGrid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewGrid::CopyFrom(const ViewGrid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewGrid::IsInitialized() const {
  return true;
}

void ViewGrid::Swap(ViewGrid* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewGrid* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewGrid::UnsafeArenaSwap(ViewGrid* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewGrid::InternalSwap(ViewGrid* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(grid_type_, other->grid_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ViewGrid::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ViewGrid

// .NetProto.PBVector2 center = 1;
bool ViewGrid::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
void ViewGrid::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
const ::NetProto::PBVector2& ViewGrid::center() const {
  const ::NetProto::PBVector2* p = center_;
  // @@protoc_insertion_point(field_get:NetProto.ViewGrid.center)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector2*>(
      &::NetProto::_PBVector2_default_instance_);
}
::NetProto::PBVector2* ViewGrid::mutable_center() {
  
  if (center_ == NULL) {
    _slow_mutable_center();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.ViewGrid.center)
  return center_;
}
::NetProto::PBVector2* ViewGrid::release_center() {
  // @@protoc_insertion_point(field_release:NetProto.ViewGrid.center)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_center();
  } else {
    ::NetProto::PBVector2* temp = center_;
    center_ = NULL;
    return temp;
  }
}
 void ViewGrid::set_allocated_center(::NetProto::PBVector2* center) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete center_;
  }
  if (center != NULL) {
    _slow_set_allocated_center(message_arena, &center);
  }
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.ViewGrid.center)
}

// int32 grid_type = 2;
void ViewGrid::clear_grid_type() {
  grid_type_ = 0;
}
::google::protobuf::int32 ViewGrid::grid_type() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewGrid.grid_type)
  return grid_type_;
}
void ViewGrid::set_grid_type(::google::protobuf::int32 value) {
  
  grid_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewGrid.grid_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewSnapshotDiff::kMoreGridsFieldNumber;
const int ViewSnapshotDiff::kMissGridsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewSnapshotDiff::ViewSnapshotDiff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewSnapshotDiff)
}
ViewSnapshotDiff::ViewSnapshotDiff(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  more_grids_(arena),
  miss_grids_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewSnapshotDiff)
}
ViewSnapshotDiff::ViewSnapshotDiff(const ViewSnapshotDiff& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      more_grids_(from.more_grids_),
      miss_grids_(from.miss_grids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewSnapshotDiff)
}

void ViewSnapshotDiff::SharedCtor() {
  _cached_size_ = 0;
}

ViewSnapshotDiff::~ViewSnapshotDiff() {
  // @@protoc_insertion_point(destructor:NetProto.ViewSnapshotDiff)
  SharedDtor();
}

void ViewSnapshotDiff::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ViewSnapshotDiff::ArenaDtor(void* object) {
  ViewSnapshotDiff* _this = reinterpret_cast< ViewSnapshotDiff* >(object);
  (void)_this;
}
void ViewSnapshotDiff::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ViewSnapshotDiff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewSnapshotDiff::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewSnapshotDiff& ViewSnapshotDiff::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

ViewSnapshotDiff* ViewSnapshotDiff::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ViewSnapshotDiff>(arena);
}

void ViewSnapshotDiff::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewSnapshotDiff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  more_grids_.Clear();
  miss_grids_.Clear();
  _internal_metadata_.Clear();
}

bool ViewSnapshotDiff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewSnapshotDiff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 more_grids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_more_grids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_more_grids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 miss_grids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_miss_grids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_miss_grids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewSnapshotDiff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewSnapshotDiff)
  return false;
#undef DO_
}

void ViewSnapshotDiff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewSnapshotDiff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 more_grids = 1;
  if (this->more_grids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _more_grids_cached_byte_size_));
  }
  for (int i = 0, n = this->more_grids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->more_grids(i), output);
  }

  // repeated int32 miss_grids = 2;
  if (this->miss_grids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _miss_grids_cached_byte_size_));
  }
  for (int i = 0, n = this->miss_grids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->miss_grids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewSnapshotDiff)
}

::google::protobuf::uint8* ViewSnapshotDiff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewSnapshotDiff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 more_grids = 1;
  if (this->more_grids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _more_grids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->more_grids_, target);
  }

  // repeated int32 miss_grids = 2;
  if (this->miss_grids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _miss_grids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->miss_grids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewSnapshotDiff)
  return target;
}

size_t ViewSnapshotDiff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewSnapshotDiff)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 more_grids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->more_grids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _more_grids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 miss_grids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->miss_grids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _miss_grids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewSnapshotDiff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewSnapshotDiff)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewSnapshotDiff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewSnapshotDiff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewSnapshotDiff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewSnapshotDiff)
    MergeFrom(*source);
  }
}

void ViewSnapshotDiff::MergeFrom(const ViewSnapshotDiff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewSnapshotDiff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  more_grids_.MergeFrom(from.more_grids_);
  miss_grids_.MergeFrom(from.miss_grids_);
}

void ViewSnapshotDiff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewSnapshotDiff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewSnapshotDiff::CopyFrom(const ViewSnapshotDiff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewSnapshotDiff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewSnapshotDiff::IsInitialized() const {
  return true;
}

void ViewSnapshotDiff::Swap(ViewSnapshotDiff* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewSnapshotDiff* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewSnapshotDiff::UnsafeArenaSwap(ViewSnapshotDiff* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewSnapshotDiff::InternalSwap(ViewSnapshotDiff* other) {
  using std::swap;
  more_grids_.InternalSwap(&other->more_grids_);
  miss_grids_.InternalSwap(&other->miss_grids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ViewSnapshotDiff::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ViewSnapshotDiff

// repeated int32 more_grids = 1;
int ViewSnapshotDiff::more_grids_size() const {
  return more_grids_.size();
}
void ViewSnapshotDiff::clear_more_grids() {
  more_grids_.Clear();
}
::google::protobuf::int32 ViewSnapshotDiff::more_grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewSnapshotDiff.more_grids)
  return more_grids_.Get(index);
}
void ViewSnapshotDiff::set_more_grids(int index, ::google::protobuf::int32 value) {
  more_grids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.ViewSnapshotDiff.more_grids)
}
void ViewSnapshotDiff::add_more_grids(::google::protobuf::int32 value) {
  more_grids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.ViewSnapshotDiff.more_grids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ViewSnapshotDiff::more_grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewSnapshotDiff.more_grids)
  return more_grids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ViewSnapshotDiff::mutable_more_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewSnapshotDiff.more_grids)
  return &more_grids_;
}

// repeated int32 miss_grids = 2;
int ViewSnapshotDiff::miss_grids_size() const {
  return miss_grids_.size();
}
void ViewSnapshotDiff::clear_miss_grids() {
  miss_grids_.Clear();
}
::google::protobuf::int32 ViewSnapshotDiff::miss_grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewSnapshotDiff.miss_grids)
  return miss_grids_.Get(index);
}
void ViewSnapshotDiff::set_miss_grids(int index, ::google::protobuf::int32 value) {
  miss_grids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.ViewSnapshotDiff.miss_grids)
}
void ViewSnapshotDiff::add_miss_grids(::google::protobuf::int32 value) {
  miss_grids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.ViewSnapshotDiff.miss_grids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ViewSnapshotDiff::miss_grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewSnapshotDiff.miss_grids)
  return miss_grids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ViewSnapshotDiff::mutable_miss_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewSnapshotDiff.miss_grids)
  return &miss_grids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewSnapshot::kLightGridsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewSnapshot::ViewSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewSnapshot)
}
ViewSnapshot::ViewSnapshot(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  light_grids_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewSnapshot)
}
ViewSnapshot::ViewSnapshot(const ViewSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      light_grids_(from.light_grids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewSnapshot)
}

void ViewSnapshot::SharedCtor() {
  _cached_size_ = 0;
}

ViewSnapshot::~ViewSnapshot() {
  // @@protoc_insertion_point(destructor:NetProto.ViewSnapshot)
  SharedDtor();
}

void ViewSnapshot::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ViewSnapshot::ArenaDtor(void* object) {
  ViewSnapshot* _this = reinterpret_cast< ViewSnapshot* >(object);
  (void)_this;
}
void ViewSnapshot::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ViewSnapshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewSnapshot::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewSnapshot& ViewSnapshot::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

ViewSnapshot* ViewSnapshot::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ViewSnapshot>(arena);
}

void ViewSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  light_grids_.Clear();
  _internal_metadata_.Clear();
}

bool ViewSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewSnapshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 light_grids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_light_grids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_light_grids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewSnapshot)
  return false;
#undef DO_
}

void ViewSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 light_grids = 1;
  if (this->light_grids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _light_grids_cached_byte_size_));
  }
  for (int i = 0, n = this->light_grids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->light_grids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewSnapshot)
}

::google::protobuf::uint8* ViewSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 light_grids = 1;
  if (this->light_grids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _light_grids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->light_grids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewSnapshot)
  return target;
}

size_t ViewSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewSnapshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 light_grids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->light_grids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _light_grids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewSnapshot)
    MergeFrom(*source);
  }
}

void ViewSnapshot::MergeFrom(const ViewSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  light_grids_.MergeFrom(from.light_grids_);
}

void ViewSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewSnapshot::CopyFrom(const ViewSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewSnapshot::IsInitialized() const {
  return true;
}

void ViewSnapshot::Swap(ViewSnapshot* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewSnapshot* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewSnapshot::UnsafeArenaSwap(ViewSnapshot* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewSnapshot::InternalSwap(ViewSnapshot* other) {
  using std::swap;
  light_grids_.InternalSwap(&other->light_grids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ViewSnapshot::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ViewSnapshot

// repeated int32 light_grids = 1;
int ViewSnapshot::light_grids_size() const {
  return light_grids_.size();
}
void ViewSnapshot::clear_light_grids() {
  light_grids_.Clear();
}
::google::protobuf::int32 ViewSnapshot::light_grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewSnapshot.light_grids)
  return light_grids_.Get(index);
}
void ViewSnapshot::set_light_grids(int index, ::google::protobuf::int32 value) {
  light_grids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.ViewSnapshot.light_grids)
}
void ViewSnapshot::add_light_grids(::google::protobuf::int32 value) {
  light_grids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.ViewSnapshot.light_grids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ViewSnapshot::light_grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewSnapshot.light_grids)
  return light_grids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ViewSnapshot::mutable_light_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewSnapshot.light_grids)
  return &light_grids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewAllGrids::kGridSizeFieldNumber;
const int ViewAllGrids::kRowFieldNumber;
const int ViewAllGrids::kColFieldNumber;
const int ViewAllGrids::kGridsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewAllGrids::ViewAllGrids()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewAllGrids)
}
ViewAllGrids::ViewAllGrids(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  grids_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewAllGrids)
}
ViewAllGrids::ViewAllGrids(const ViewAllGrids& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      grids_(from.grids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&grid_size_, &from.grid_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&grid_size_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewAllGrids)
}

void ViewAllGrids::SharedCtor() {
  ::memset(&grid_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&grid_size_)) + sizeof(col_));
  _cached_size_ = 0;
}

ViewAllGrids::~ViewAllGrids() {
  // @@protoc_insertion_point(destructor:NetProto.ViewAllGrids)
  SharedDtor();
}

void ViewAllGrids::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ViewAllGrids::ArenaDtor(void* object) {
  ViewAllGrids* _this = reinterpret_cast< ViewAllGrids* >(object);
  (void)_this;
}
void ViewAllGrids::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ViewAllGrids::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAllGrids::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewAllGrids& ViewAllGrids::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

ViewAllGrids* ViewAllGrids::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ViewAllGrids>(arena);
}

void ViewAllGrids::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewAllGrids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grids_.Clear();
  ::memset(&grid_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&grid_size_)) + sizeof(col_));
  _internal_metadata_.Clear();
}

bool ViewAllGrids::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewAllGrids)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float grid_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &grid_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.ViewGrid grids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewAllGrids)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewAllGrids)
  return false;
#undef DO_
}

void ViewAllGrids::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewAllGrids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float grid_size = 1;
  if (this->grid_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->grid_size(), output);
  }

  // int32 row = 2;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->row(), output);
  }

  // int32 col = 3;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->col(), output);
  }

  // repeated .NetProto.ViewGrid grids = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->grids(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewAllGrids)
}

::google::protobuf::uint8* ViewAllGrids::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewAllGrids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float grid_size = 1;
  if (this->grid_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->grid_size(), target);
  }

  // int32 row = 2;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->row(), target);
  }

  // int32 col = 3;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->col(), target);
  }

  // repeated .NetProto.ViewGrid grids = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->grids(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewAllGrids)
  return target;
}

size_t ViewAllGrids::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewAllGrids)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NetProto.ViewGrid grids = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->grids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->grids(static_cast<int>(i)));
    }
  }

  // float grid_size = 1;
  if (this->grid_size() != 0) {
    total_size += 1 + 4;
  }

  // int32 row = 2;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 3;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAllGrids::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewAllGrids)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewAllGrids* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewAllGrids>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewAllGrids)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewAllGrids)
    MergeFrom(*source);
  }
}

void ViewAllGrids::MergeFrom(const ViewAllGrids& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewAllGrids)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grids_.MergeFrom(from.grids_);
  if (from.grid_size() != 0) {
    set_grid_size(from.grid_size());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
}

void ViewAllGrids::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewAllGrids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAllGrids::CopyFrom(const ViewAllGrids& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewAllGrids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAllGrids::IsInitialized() const {
  return true;
}

void ViewAllGrids::Swap(ViewAllGrids* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewAllGrids* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewAllGrids::UnsafeArenaSwap(ViewAllGrids* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewAllGrids::InternalSwap(ViewAllGrids* other) {
  using std::swap;
  grids_.InternalSwap(&other->grids_);
  swap(grid_size_, other->grid_size_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ViewAllGrids::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ViewAllGrids

// float grid_size = 1;
void ViewAllGrids::clear_grid_size() {
  grid_size_ = 0;
}
float ViewAllGrids::grid_size() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.grid_size)
  return grid_size_;
}
void ViewAllGrids::set_grid_size(float value) {
  
  grid_size_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewAllGrids.grid_size)
}

// int32 row = 2;
void ViewAllGrids::clear_row() {
  row_ = 0;
}
::google::protobuf::int32 ViewAllGrids::row() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.row)
  return row_;
}
void ViewAllGrids::set_row(::google::protobuf::int32 value) {
  
  row_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewAllGrids.row)
}

// int32 col = 3;
void ViewAllGrids::clear_col() {
  col_ = 0;
}
::google::protobuf::int32 ViewAllGrids::col() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.col)
  return col_;
}
void ViewAllGrids::set_col(::google::protobuf::int32 value) {
  
  col_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewAllGrids.col)
}

// repeated .NetProto.ViewGrid grids = 4;
int ViewAllGrids::grids_size() const {
  return grids_.size();
}
void ViewAllGrids::clear_grids() {
  grids_.Clear();
}
const ::NetProto::ViewGrid& ViewAllGrids::grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.grids)
  return grids_.Get(index);
}
::NetProto::ViewGrid* ViewAllGrids::mutable_grids(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.ViewAllGrids.grids)
  return grids_.Mutable(index);
}
::NetProto::ViewGrid* ViewAllGrids::add_grids() {
  // @@protoc_insertion_point(field_add:NetProto.ViewAllGrids.grids)
  return grids_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::ViewGrid >*
ViewAllGrids::mutable_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewAllGrids.grids)
  return &grids_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::ViewGrid >&
ViewAllGrids::grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewAllGrids.grids)
  return grids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SceneUnitState::_slow_mutable_pos() {
  pos_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector3* SceneUnitState::_slow_release_pos() {
  if (pos_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector3* temp = new ::NetProto::PBVector3(*pos_);
    pos_ = NULL;
    return temp;
  }
}
::NetProto::PBVector3* SceneUnitState::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.SceneUnitState.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void SceneUnitState::_slow_set_allocated_pos(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector3** pos) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*pos) == NULL) {
      message_arena->Own(*pos);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*pos)) {
      ::NetProto::PBVector3* new_pos = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
            message_arena);
      new_pos->CopyFrom(**pos);
      *pos = new_pos;
    }
}
void SceneUnitState::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector3* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitState.pos)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneUnitState::kSuIdFieldNumber;
const int SceneUnitState::kUnitTypeFieldNumber;
const int SceneUnitState::kModelIdFieldNumber;
const int SceneUnitState::kPosFieldNumber;
const int SceneUnitState::kFaceDirFieldNumber;
const int SceneUnitState::kParentSuIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneUnitState::SceneUnitState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneUnitState)
}
SceneUnitState::SceneUnitState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneUnitState)
}
SceneUnitState::SceneUnitState(const SceneUnitState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector3(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_dir_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneUnitState)
}

void SceneUnitState::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(face_dir_));
  _cached_size_ = 0;
}

SceneUnitState::~SceneUnitState() {
  // @@protoc_insertion_point(destructor:NetProto.SceneUnitState)
  SharedDtor();
}

void SceneUnitState::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete pos_;
}

void SceneUnitState::ArenaDtor(void* object) {
  SceneUnitState* _this = reinterpret_cast< SceneUnitState* >(object);
  (void)_this;
}
void SceneUnitState::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SceneUnitState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneUnitState::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneUnitState& SceneUnitState::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneUnitState* SceneUnitState::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SceneUnitState>(arena);
}

void SceneUnitState::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneUnitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  _internal_metadata_.Clear();
}

bool SceneUnitState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneUnitState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 model_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float face_dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 parent_su_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &parent_su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneUnitState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneUnitState)
  return false;
#undef DO_
}

void SceneUnitState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneUnitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // int32 unit_type = 2;
  if (this->unit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->unit_type(), output);
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->model_id(), output);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pos_, output);
  }

  // float face_dir = 5;
  if (this->face_dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->face_dir(), output);
  }

  // uint64 parent_su_id = 6;
  if (this->parent_su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->parent_su_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneUnitState)
}

::google::protobuf::uint8* SceneUnitState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneUnitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // int32 unit_type = 2;
  if (this->unit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->unit_type(), target);
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->model_id(), target);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pos_, deterministic, target);
  }

  // float face_dir = 5;
  if (this->face_dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->face_dir(), target);
  }

  // uint64 parent_su_id = 6;
  if (this->parent_su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->parent_su_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneUnitState)
  return target;
}

size_t SceneUnitState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneUnitState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // int32 unit_type = 2;
  if (this->unit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_type());
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->model_id());
  }

  // uint64 parent_su_id = 6;
  if (this->parent_su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->parent_su_id());
  }

  // float face_dir = 5;
  if (this->face_dir() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneUnitState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneUnitState)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneUnitState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneUnitState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneUnitState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneUnitState)
    MergeFrom(*source);
  }
}

void SceneUnitState::MergeFrom(const SceneUnitState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneUnitState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector3::MergeFrom(from.pos());
  }
  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.unit_type() != 0) {
    set_unit_type(from.unit_type());
  }
  if (from.model_id() != 0) {
    set_model_id(from.model_id());
  }
  if (from.parent_su_id() != 0) {
    set_parent_su_id(from.parent_su_id());
  }
  if (from.face_dir() != 0) {
    set_face_dir(from.face_dir());
  }
}

void SceneUnitState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneUnitState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneUnitState::CopyFrom(const SceneUnitState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneUnitState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneUnitState::IsInitialized() const {
  return true;
}

void SceneUnitState::Swap(SceneUnitState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneUnitState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneUnitState::UnsafeArenaSwap(SceneUnitState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneUnitState::InternalSwap(SceneUnitState* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(su_id_, other->su_id_);
  swap(unit_type_, other->unit_type_);
  swap(model_id_, other->model_id_);
  swap(parent_su_id_, other->parent_su_id_);
  swap(face_dir_, other->face_dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneUnitState::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneUnitState

// uint64 su_id = 1;
void SceneUnitState::clear_su_id() {
  su_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneUnitState::su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.su_id)
  return su_id_;
}
void SceneUnitState::set_su_id(::google::protobuf::uint64 value) {
  
  su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.su_id)
}

// int32 unit_type = 2;
void SceneUnitState::clear_unit_type() {
  unit_type_ = 0;
}
::google::protobuf::int32 SceneUnitState::unit_type() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.unit_type)
  return unit_type_;
}
void SceneUnitState::set_unit_type(::google::protobuf::int32 value) {
  
  unit_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.unit_type)
}

// int32 model_id = 3;
void SceneUnitState::clear_model_id() {
  model_id_ = 0;
}
::google::protobuf::int32 SceneUnitState::model_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.model_id)
  return model_id_;
}
void SceneUnitState::set_model_id(::google::protobuf::int32 value) {
  
  model_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.model_id)
}

// .NetProto.PBVector3 pos = 4;
bool SceneUnitState::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void SceneUnitState::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::NetProto::PBVector3& SceneUnitState::pos() const {
  const ::NetProto::PBVector3* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector3*>(
      &::NetProto::_PBVector3_default_instance_);
}
::NetProto::PBVector3* SceneUnitState::mutable_pos() {
  
  if (pos_ == NULL) {
    _slow_mutable_pos();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.SceneUnitState.pos)
  return pos_;
}
::NetProto::PBVector3* SceneUnitState::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.SceneUnitState.pos)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_pos();
  } else {
    ::NetProto::PBVector3* temp = pos_;
    pos_ = NULL;
    return temp;
  }
}
 void SceneUnitState::set_allocated_pos(::NetProto::PBVector3* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos != NULL) {
    _slow_set_allocated_pos(message_arena, &pos);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneUnitState.pos)
}

// float face_dir = 5;
void SceneUnitState::clear_face_dir() {
  face_dir_ = 0;
}
float SceneUnitState::face_dir() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.face_dir)
  return face_dir_;
}
void SceneUnitState::set_face_dir(float value) {
  
  face_dir_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.face_dir)
}

// uint64 parent_su_id = 6;
void SceneUnitState::clear_parent_su_id() {
  parent_su_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneUnitState::parent_su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.parent_su_id)
  return parent_su_id_;
}
void SceneUnitState::set_parent_su_id(::google::protobuf::uint64 value) {
  
  parent_su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.parent_su_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SceneUnitTransform::_slow_mutable_pos() {
  pos_ = ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
      GetArenaNoVirtual());
}
::NetProto::PBVector3* SceneUnitTransform::_slow_release_pos() {
  if (pos_ == NULL) {
    return NULL;
  } else {
    ::NetProto::PBVector3* temp = new ::NetProto::PBVector3(*pos_);
    pos_ = NULL;
    return temp;
  }
}
::NetProto::PBVector3* SceneUnitTransform::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.SceneUnitTransform.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void SceneUnitTransform::_slow_set_allocated_pos(
    ::google::protobuf::Arena* message_arena, ::NetProto::PBVector3** pos) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*pos) == NULL) {
      message_arena->Own(*pos);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*pos)) {
      ::NetProto::PBVector3* new_pos = 
            ::google::protobuf::Arena::CreateMessage< ::NetProto::PBVector3 >(
            message_arena);
      new_pos->CopyFrom(**pos);
      *pos = new_pos;
    }
}
void SceneUnitTransform::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector3* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitTransform.pos)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneUnitTransform::kSuIdFieldNumber;
const int SceneUnitTransform::kPosFieldNumber;
const int SceneUnitTransform::kFaceDirFieldNumber;
const int SceneUnitTransform::kParentSuIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneUnitTransform::SceneUnitTransform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneUnitTransform)
}
SceneUnitTransform::SceneUnitTransform(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneUnitTransform)
}
SceneUnitTransform::SceneUnitTransform(const SceneUnitTransform& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector3(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_dir_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneUnitTransform)
}

void SceneUnitTransform::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(face_dir_));
  _cached_size_ = 0;
}

SceneUnitTransform::~SceneUnitTransform() {
  // @@protoc_insertion_point(destructor:NetProto.SceneUnitTransform)
  SharedDtor();
}

void SceneUnitTransform::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete pos_;
}

void SceneUnitTransform::ArenaDtor(void* object) {
  SceneUnitTransform* _this = reinterpret_cast< SceneUnitTransform* >(object);
  (void)_this;
}
void SceneUnitTransform::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SceneUnitTransform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneUnitTransform::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneUnitTransform& SceneUnitTransform::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneUnitTransform* SceneUnitTransform::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SceneUnitTransform>(arena);
}

void SceneUnitTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneUnitTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  _internal_metadata_.Clear();
}

bool SceneUnitTransform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneUnitTransform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float face_dir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 parent_su_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &parent_su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneUnitTransform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneUnitTransform)
  return false;
#undef DO_
}

void SceneUnitTransform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneUnitTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // .NetProto.PBVector3 pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // float face_dir = 3;
  if (this->face_dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->face_dir(), output);
  }

  // uint64 parent_su_id = 4;
  if (this->parent_su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->parent_su_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneUnitTransform)
}

::google::protobuf::uint8* SceneUnitTransform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneUnitTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // .NetProto.PBVector3 pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  // float face_dir = 3;
  if (this->face_dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->face_dir(), target);
  }

  // uint64 parent_su_id = 4;
  if (this->parent_su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->parent_su_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneUnitTransform)
  return target;
}

size_t SceneUnitTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneUnitTransform)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // uint64 parent_su_id = 4;
  if (this->parent_su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->parent_su_id());
  }

  // float face_dir = 3;
  if (this->face_dir() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneUnitTransform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneUnitTransform)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneUnitTransform* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneUnitTransform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneUnitTransform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneUnitTransform)
    MergeFrom(*source);
  }
}

void SceneUnitTransform::MergeFrom(const SceneUnitTransform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneUnitTransform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector3::MergeFrom(from.pos());
  }
  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.parent_su_id() != 0) {
    set_parent_su_id(from.parent_su_id());
  }
  if (from.face_dir() != 0) {
    set_face_dir(from.face_dir());
  }
}

void SceneUnitTransform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneUnitTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneUnitTransform::CopyFrom(const SceneUnitTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneUnitTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneUnitTransform::IsInitialized() const {
  return true;
}

void SceneUnitTransform::Swap(SceneUnitTransform* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneUnitTransform* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneUnitTransform::UnsafeArenaSwap(SceneUnitTransform* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneUnitTransform::InternalSwap(SceneUnitTransform* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(su_id_, other->su_id_);
  swap(parent_su_id_, other->parent_su_id_);
  swap(face_dir_, other->face_dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneUnitTransform::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneUnitTransform

// uint64 su_id = 1;
void SceneUnitTransform::clear_su_id() {
  su_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneUnitTransform::su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.su_id)
  return su_id_;
}
void SceneUnitTransform::set_su_id(::google::protobuf::uint64 value) {
  
  su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitTransform.su_id)
}

// .NetProto.PBVector3 pos = 2;
bool SceneUnitTransform::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void SceneUnitTransform::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::NetProto::PBVector3& SceneUnitTransform::pos() const {
  const ::NetProto::PBVector3* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector3*>(
      &::NetProto::_PBVector3_default_instance_);
}
::NetProto::PBVector3* SceneUnitTransform::mutable_pos() {
  
  if (pos_ == NULL) {
    _slow_mutable_pos();
  }
  // @@protoc_insertion_point(field_mutable:NetProto.SceneUnitTransform.pos)
  return pos_;
}
::NetProto::PBVector3* SceneUnitTransform::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.SceneUnitTransform.pos)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_pos();
  } else {
    ::NetProto::PBVector3* temp = pos_;
    pos_ = NULL;
    return temp;
  }
}
 void SceneUnitTransform::set_allocated_pos(::NetProto::PBVector3* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos != NULL) {
    _slow_set_allocated_pos(message_arena, &pos);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneUnitTransform.pos)
}

// float face_dir = 3;
void SceneUnitTransform::clear_face_dir() {
  face_dir_ = 0;
}
float SceneUnitTransform::face_dir() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.face_dir)
  return face_dir_;
}
void SceneUnitTransform::set_face_dir(float value) {
  
  face_dir_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitTransform.face_dir)
}

// uint64 parent_su_id = 4;
void SceneUnitTransform::clear_parent_su_id() {
  parent_su_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneUnitTransform::parent_su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.parent_su_id)
  return parent_su_id_;
}
void SceneUnitTransform::set_parent_su_id(::google::protobuf::uint64 value) {
  
  parent_su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitTransform.parent_su_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneUnitMove::kSuIdFieldNumber;
const int SceneUnitMove::kMoveAgentStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneUnitMove::SceneUnitMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Battle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneUnitMove)
}
SceneUnitMove::SceneUnitMove(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_Battle_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneUnitMove)
}
SceneUnitMove::SceneUnitMove(const SceneUnitMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&move_agent_state_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(move_agent_state_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneUnitMove)
}

void SceneUnitMove::SharedCtor() {
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&move_agent_state_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(move_agent_state_));
  _cached_size_ = 0;
}

SceneUnitMove::~SceneUnitMove() {
  // @@protoc_insertion_point(destructor:NetProto.SceneUnitMove)
  SharedDtor();
}

void SceneUnitMove::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void SceneUnitMove::ArenaDtor(void* object) {
  SceneUnitMove* _this = reinterpret_cast< SceneUnitMove* >(object);
  (void)_this;
}
void SceneUnitMove::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SceneUnitMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneUnitMove::descriptor() {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneUnitMove& SceneUnitMove::default_instance() {
  protobuf_Battle_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneUnitMove* SceneUnitMove::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SceneUnitMove>(arena);
}

void SceneUnitMove::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneUnitMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&move_agent_state_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(move_agent_state_));
  _internal_metadata_.Clear();
}

bool SceneUnitMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneUnitMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.EMoveAgentState move_agent_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_move_agent_state(static_cast< ::NetProto::EMoveAgentState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneUnitMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneUnitMove)
  return false;
#undef DO_
}

void SceneUnitMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneUnitMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->move_agent_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneUnitMove)
}

::google::protobuf::uint8* SceneUnitMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneUnitMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->move_agent_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneUnitMove)
  return target;
}

size_t SceneUnitMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneUnitMove)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->move_agent_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneUnitMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneUnitMove)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneUnitMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneUnitMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneUnitMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneUnitMove)
    MergeFrom(*source);
  }
}

void SceneUnitMove::MergeFrom(const SceneUnitMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneUnitMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.move_agent_state() != 0) {
    set_move_agent_state(from.move_agent_state());
  }
}

void SceneUnitMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneUnitMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneUnitMove::CopyFrom(const SceneUnitMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneUnitMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneUnitMove::IsInitialized() const {
  return true;
}

void SceneUnitMove::Swap(SceneUnitMove* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneUnitMove* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneUnitMove::UnsafeArenaSwap(SceneUnitMove* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneUnitMove::InternalSwap(SceneUnitMove* other) {
  using std::swap;
  swap(su_id_, other->su_id_);
  swap(move_agent_state_, other->move_agent_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneUnitMove::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneUnitMove

// uint64 su_id = 1;
void SceneUnitMove::clear_su_id() {
  su_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneUnitMove::su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitMove.su_id)
  return su_id_;
}
void SceneUnitMove::set_su_id(::google::protobuf::uint64 value) {
  
  su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitMove.su_id)
}

// .NetProto.EMoveAgentState move_agent_state = 2;
void SceneUnitMove::clear_move_agent_state() {
  move_agent_state_ = 0;
}
::NetProto::EMoveAgentState SceneUnitMove::move_agent_state() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitMove.move_agent_state)
  return static_cast< ::NetProto::EMoveAgentState >(move_agent_state_);
}
void SceneUnitMove::set_move_agent_state(::NetProto::EMoveAgentState value) {
  
  move_agent_state_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitMove.move_agent_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
